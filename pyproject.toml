[build-system]
requires = [ "poetry>=0.12",]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "epmanager"
version = "0.6.0+64"
description = ""
authors = [ "Karl Knechtel <karl.a.knechtel@gmail.com>",]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
pytest = "^5.2"

[tool.poetry.scripts]
epmanager-update-metadata = "epmanager.discovery:write_all.invoke"
epmanager-wrapper = "epmanager.discovery:make_wrapper_script.invoke"
epmanager-doc-example-1 = "epmanager.examples:doc_example_1.invoke"
epmanager-doc-example-2 = "epmanager.examples:doc_example_2.invoke"
epmanager-doc-example-3 = "epmanager.examples:doc_example_3.invoke"
epmanager-doc-example-4 = "epmanager.examples:doc_example_4.invoke"
epmanager-empty = "epmanager.examples:empty.invoke"
epmanager-un-documented = "epmanager.examples:un_documented.invoke"
epmanager-example = "epmanager.examples:example.invoke"
epmanager-renamed-1 = "epmanager.examples:tricky_1.invoke"
epmanager-custom-parser = "epmanager.examples:custom_parser.invoke"
epmanager-hard = "epmanager.examples:hard.invoke"
epmanager-defaults = "epmanager.examples:defaults.invoke"
epmanager-positional-by-keyword = "epmanager.examples:positional_by_keyword.invoke"
epmanager-inverse-flag = "epmanager.examples:inverse_flag.invoke"
